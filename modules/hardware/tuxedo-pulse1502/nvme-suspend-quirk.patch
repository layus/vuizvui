diff --git a/drivers/nvme/host/nvme.h b/drivers/nvme/host/nvme.h
index 7be92d07430e..f039b7bd90b0 100644
--- a/drivers/nvme/host/nvme.h
+++ b/drivers/nvme/host/nvme.h
@@ -178,6 +178,12 @@ enum nvme_quirks {
 	 * Align dma pool segment size to 512 bytes
 	 */
 	NVME_QUIRK_DMAPOOL_ALIGN_512		= (1 << 22),
+
+	/*
+	 * Disables entering D3cold state for devices that might not wake up
+	 * again afterwards.
+	 */
+	NVME_QUIRK_NO_D3_COLD			= (1 << 23),
 };
 
 /*
diff --git a/drivers/nvme/host/pci.c b/drivers/nvme/host/pci.c
index 3ad7f197c808..e1e64e80d5f7 100644
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@ -3163,6 +3163,15 @@ static unsigned long check_vendor_combination_bug(struct pci_dev *pdev)
 		    dmi_match(DMI_BOARD_NAME, "PH4PRX1_PH6PRX1") ||
 		    dmi_match(DMI_BOARD_NAME, "PH6PG01_PH6PG71"))
 			return NVME_QUIRK_FORCE_NO_SIMPLE_SUSPEND;
+	} else if (pdev->vendor == 0x144d && (pdev->device == 0xa80a ||
+	           pdev->device == 0xa808)) {
+		/*
+		 * Some Samsung SSDs on TUXEDO Pulse 15 Gen2 do not seem to
+		 * wake up from D3cold.
+		 */
+		if (dmi_match(DMI_BOARD_VENDOR, "NB02") &&
+		    dmi_match(DMI_BOARD_NAME, "PF5LUXG"))
+			return NVME_QUIRK_NO_D3_COLD;
 	}
 
 	/*
@@ -3223,6 +3232,9 @@ static struct nvme_dev *nvme_pci_alloc_dev(struct pci_dev *pdev,
 	dma_set_min_align_mask(&pdev->dev, NVME_CTRL_PAGE_SIZE - 1);
 	dma_set_max_seg_size(&pdev->dev, 0xffffffff);
 
+	if (quirks & NVME_QUIRK_NO_D3_COLD)
+		pci_d3cold_disable(pdev);
+
 	/*
 	 * Limit the max command size to prevent iod->sg allocations going
 	 * over a single page.
